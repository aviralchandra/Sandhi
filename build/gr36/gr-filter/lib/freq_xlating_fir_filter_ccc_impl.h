/* -*- c++ -*- */
/*
 * Copyright 2002,2004,2012 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * GNU Radio is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 *
 * GNU Radio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with GNU Radio; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */

/*
 * WARNING: This file is automatically generated by cmake. 
 * Any changes made to this file will be overwritten.
 */

#ifndef INCLUDED_FILTER_FREQ_XLATING_FIR_FILTER_CCC_IMPL_H
#define	INCLUDED_FILTER_FREQ_XLATING_FIR_FILTER_CCC_IMPL_H

#include <filter/api.h>
#include <filter/fir_filter.h>
#include <filter/freq_xlating_fir_filter_ccc.h>

namespace gr {
  namespace filter {

    class FILTER_API freq_xlating_fir_filter_ccc_impl : public freq_xlating_fir_filter_ccc
    {
    protected:
      std::vector<gr_complex>	d_proto_taps;
      kernel::fir_filter_ccc      *d_composite_fir;
      gr_rotator		d_r;
      double			d_center_freq;
      double			d_sampling_freq;
      bool			d_updated;
      
      virtual void build_composite_fir();
    public:

      freq_xlating_fir_filter_ccc_impl(int decimation,
		  const std::vector<gr_complex> &taps,
		  double center_freq,
		  double sampling_freq);
      virtual ~freq_xlating_fir_filter_ccc_impl();

      void set_center_freq(double center_freq);
      double center_freq() const;

      void set_taps(const std::vector<gr_complex> &taps);
      std::vector<gr_complex> taps() const;

      int work(int noutput_items,
	       gr_vector_const_void_star &input_items,
	       gr_vector_void_star &output_items);
    };

  } /* namespace filter */
} /* namespace gr */

#endif /* INCLUDED_FILTER_FREQ_XLATING_FIR_FILTER_CCC_IMPL_H */
