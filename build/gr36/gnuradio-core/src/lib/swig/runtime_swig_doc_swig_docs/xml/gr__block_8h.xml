<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__block_8h" kind="file">
    <compoundname>gr_block.h</compoundname>
    <includes local="no">gr_core_api.h</includes>
    <includes local="no">gras/block.hpp</includes>
    <includes refid="gr__io__signature_8h" local="no">gr_io_signature.h</includes>
    <includes refid="gr__types_8h" local="no">gr_types.h</includes>
    <includes refid="gr__tags_8h" local="no">gr_tags.h</includes>
    <includes local="no">string</includes>
    <includes local="no">deque</includes>
    <includes local="no">map</includes>
    <includes local="no">boost/foreach.hpp</includes>
    <includes local="no">gruel/thread.h</includes>
    <includes refid="gr__sptr__magic_8h" local="no">gr_sptr_magic.h</includes>
    <includedby refid="gr__flat__flowgraph_8h" local="no">/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_flat_flowgraph.h</includedby>
    <includedby refid="gr__scheduler_8h" local="no">/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_scheduler.h</includedby>
    <includedby refid="gr__sync__block_8h" local="no">/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_sync_block.h</includedby>
    <includedby refid="gr__tpb__thread__body_8h" local="no">/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_tpb_thread_body.h</includedby>
    <incdepgraph>
      <node id="49">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="40">
        <label>gras/hier_block.hpp</label>
      </node>
      <node id="39">
        <label>gras/top_block.hpp</label>
      </node>
      <node id="46">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="34">
        <label>gras/block.hpp</label>
      </node>
      <node id="43">
        <label>string</label>
      </node>
      <node id="45">
        <label>map</label>
      </node>
      <node id="47">
        <label>gruel/thread.h</label>
      </node>
      <node id="32">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_block.h</label>
        <link refid="gr_block.h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>gr_runtime_types.h</label>
        <link refid="gr__runtime__types_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>gr_core_api.h</label>
      </node>
      <node id="35">
        <label>gr_io_signature.h</label>
        <link refid="gr__io__signature_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>gruel/pmt.h</label>
      </node>
      <node id="37">
        <label>gr_types.h</label>
        <link refid="gr__types_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>deque</label>
      </node>
      <node id="41">
        <label>gr_tags.h</label>
        <link refid="gr__tags_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>gr_sptr_magic.h</label>
        <link refid="gr__sptr__magic_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>gras/element.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="54">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_scheduler_sts.h</label>
        <link refid="gr__scheduler__sts_8h"/>
      </node>
      <node id="53">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_scheduler.h</label>
        <link refid="gr__scheduler_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_tpb_thread_body.h</label>
        <link refid="gr__tpb__thread__body_8h"/>
      </node>
      <node id="58">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_sync_decimator.h</label>
        <link refid="gr__sync__decimator_8h"/>
      </node>
      <node id="50">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_block.h</label>
        <link refid="gr_block.h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_flat_flowgraph.h</label>
        <link refid="gr__flat__flowgraph_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_sync_block.h</label>
        <link refid="gr__sync__block_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_scheduler_tpb.h</label>
        <link refid="gr__scheduler__tpb_8h"/>
      </node>
      <node id="59">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_sync_interpolator.h</label>
        <link refid="gr__sync__interpolator_8h"/>
      </node>
      <node id="52">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_hier_block2_detail.h</label>
        <link refid="gr__hier__block2__detail_8h"/>
      </node>
      <node id="56">
        <label>/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_top_block_impl.h</label>
        <link refid="gr__top__block__impl_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structgr__block" prot="public">gr_block</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gr__block_8h_1a0e2b009a3179d6dc1131742e185f910b" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="structgr__block" kindref="compound">gr_block</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;gr_block&gt; gr_block_sptr</definition>
        <argsstring></argsstring>
        <name>gr_block_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_block.h" line="389" bodyfile="/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_block.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2012-2013<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GNURADIO_GR_BLOCK_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GNURADIO_GR_BLOCK_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_core_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gras/block.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__io__signature_8h" kindref="compound">gr_io_signature.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__types_8h" kindref="compound">gr_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__tags_8h" kindref="compound">gr_tags.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/foreach.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gruel/thread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__sptr__magic_8h" kindref="compound">gr_sptr_magic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structgr__block" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="structgr__block" kindref="compound">gr_block</ref><sp/>:<sp/>gras::Block</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgr__block" kindref="compound">gr_block</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>gr_block(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>input_signature,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>output_signature</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structgr__block_1a204b13559542a2592ba1e4f04a2df6ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a204b13559542a2592ba1e4f04a2df6ff" kindref="member">unique_id</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_unique_id;}</highlight></codeline>
<codeline lineno="49" refid="structgr__block_1ad11a2f8b6ec1b0d25b199952e535bcec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structgr__block_1ad11a2f8b6ec1b0d25b199952e535bcec" kindref="member">name</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_name;}</highlight></codeline>
<codeline lineno="50" refid="structgr__block_1a3b790ce6f4f5de587eab5557e809b536" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a3b790ce6f4f5de587eab5557e809b536" kindref="member">_unique_id</ref>;</highlight></codeline>
<codeline lineno="51" refid="structgr__block_1a0e5465af87bd5e3cd20a7aee021cd7d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structgr__block_1a0e5465af87bd5e3cd20a7aee021cd7d1" kindref="member">_name</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~gr_block(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>input_signature(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>output_signature(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_input_signature(<ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>sig);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_output_signature(<ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>sig);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_topology(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ninputs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutputs);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forecast(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::vector&lt;int&gt;<sp/>&amp;);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69" refid="structgr__block_1a73e3bff4471ca7f32637a7e162f0f4fba248a1e0554813ce26007ff5ec1530392" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WORK_CALLED_PRODUCE<sp/>=<sp/>-2,</highlight></codeline>
<codeline lineno="70" refid="structgr__block_1a73e3bff4471ca7f32637a7e162f0f4fba221c2211857dcee81fb2bbb97fe6b223" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WORK_DONE<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>general_work(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_vector_int<sp/>&amp;ninput_items,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_vector_const_void_star<sp/>&amp;input_items,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_vector_void_star<sp/>&amp;output_items</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>start(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>consume_each(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how_many_items);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>consume(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how_many_items);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>produce(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>o,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how_many_items);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>nitems_read(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>which_input<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>nitems_written(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>which_output<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_item_tag(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>which_output,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgr__tag__t" kindref="compound">gr_tag_t</ref><sp/>&amp;tag</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add_item_tag(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>which_output,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>abs_offset,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pmt::pmt_t<sp/>&amp;key,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pmt::pmt_t<sp/>&amp;value,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pmt::pmt_t<sp/>&amp;srcid=pmt::PMT_F</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_tags_in_range(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;gr_tag_t&gt;<sp/>&amp;tags,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>which_input,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>abs_start,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>abs_end,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pmt::pmt_t<sp/>&amp;key<sp/>=<sp/>pmt::pmt_t()</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_alignment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>alignment);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_unaligned(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fixed_rate_noutput_to_ninput(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>noutput_items);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>interpolation(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_interpolation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>decimation(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_decimation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_noutput_items(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_max_noutput_items(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>unset_max_noutput_items(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_set_max_noutput_items(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*******************************************************************</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Deal<sp/>with<sp/>input<sp/>and<sp/>output<sp/>port<sp/>configuration</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>history(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_history(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>history);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_fixed_rate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fixed_rate);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fixed_rate(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_relative_rate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>relative_rate);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>relative_rate(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_output_multiple(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>multiple);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>output_multiple(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*******************************************************************</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Deal<sp/>with<sp/>tag<sp/>handling<sp/>and<sp/>tag<sp/>configuration</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="structgr__block_1a32561c88f124ea07881879fe79840f61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a32561c88f124ea07881879fe79840f61" kindref="member">tag_propagation_policy_t</ref></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195" refid="structgr__block_1a32561c88f124ea07881879fe79840f61ad472255a4873399940aec9d614d82287" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPP_DONT<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="196" refid="structgr__block_1a32561c88f124ea07881879fe79840f61ac59dabb0af9fac19958d18378f3cfbfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPP_ALL_TO_ALL<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="197" refid="structgr__block_1a32561c88f124ea07881879fe79840f61a98228946b0f3b3887230269c9ba5a60f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TPP_ONE_TO_ONE<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>tag_propagation_policy_t<sp/>tag_propagation_policy(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_tag_propagation_policy(tag_propagation_policy_t<sp/>p);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="structgr__block_1a12ed3111300057dc0fe2e535de6a223e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a12ed3111300057dc0fe2e535de6a223e" kindref="member">set_max_output_buffer</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="206" refid="structgr__block_1a8e8a107a28b8e88f3acc28fed3a55e17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a8e8a107a28b8e88f3acc28fed3a55e17" kindref="member">set_max_output_buffer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="207" refid="structgr__block_1a0db3974de43628d347645f67b15a4be5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a0db3974de43628d347645f67b15a4be5" kindref="member">max_output_buffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="208" refid="structgr__block_1aac7b948761dc7c36b137a714a708990f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1aac7b948761dc7c36b137a714a708990f" kindref="member">set_min_output_buffer</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="209" refid="structgr__block_1aab63ebc4f7bebaa21c8562e064b4762d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1aab63ebc4f7bebaa21c8562e064b4762d" kindref="member">set_min_output_buffer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="210" refid="structgr__block_1a8fc7b5c1e3e309a4e7746172dbea323c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a8fc7b5c1e3e309a4e7746172dbea323c" kindref="member">min_output_buffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="structgr__block_1af0266eae2b2d6d98e63b0dfa18cd4c22" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgr__block_1af0266eae2b2d6d98e63b0dfa18cd4c22" kindref="member">d_symbol_alias</ref>;</highlight></codeline>
<codeline lineno="214" refid="structgr__block_1a372535a140a3271a8a6b25965f83c7b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgr__block_1a372535a140a3271a8a6b25965f83c7b2" kindref="member">d_symbol_name</ref>;</highlight></codeline>
<codeline lineno="215" refid="structgr__block_1a70dc9e505869f89dc96731ca4a2f19a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structgr__block_1a70dc9e505869f89dc96731ca4a2f19a9" kindref="member">symbol_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_symbol_name;<sp/>}</highlight></codeline>
<codeline lineno="216" refid="structgr__block_1aec92fab6cbc601f87a0fd1b7e9b1ee41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1aec92fab6cbc601f87a0fd1b7e9b1ee41" kindref="member">alias_set</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!d_symbol_alias.empty();<sp/>}</highlight></codeline>
<codeline lineno="217" refid="structgr__block_1afe4c4e82b353ff8ed13716dbb1609166" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structgr__block_1afe4c4e82b353ff8ed13716dbb1609166" kindref="member">alias</ref>(){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alias_set()?d_symbol_alias:symbol_name();<sp/>}</highlight></codeline>
<codeline lineno="218" refid="structgr__block_1ae97c9f5fd6773d29dcd082954d0b8138" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pmt::pmt_t<sp/><ref refid="structgr__block_1ae97c9f5fd6773d29dcd082954d0b8138" kindref="member">alias_pmt</ref>(){<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmt::pmt_intern(alias());<sp/>}</highlight></codeline>
<codeline lineno="219" refid="structgr__block_1abf57a977c6fb9e69728a29c560ef89a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1abf57a977c6fb9e69728a29c560ef89a1" kindref="member">set_block_alias</ref>(std::string<sp/>name){d_symbol_alias<sp/>=<sp/>name;}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="structgr__block_1a286bffc161bcdd89a597786290761df5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::deque&lt;pmt::pmt_t&gt;<sp/><sp/><sp/><sp/><ref refid="structgr__block_1a286bffc161bcdd89a597786290761df5" kindref="member">msg_queue_t</ref>;</highlight></codeline>
<codeline lineno="223" refid="structgr__block_1a31ed3fbbf66627cd972acb0b60f72544" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;pmt::pmt_t,<sp/>msg_queue_t,<sp/>pmt::pmt_comperator&gt;<sp/><sp/><sp/><sp/><ref refid="structgr__block_1a31ed3fbbf66627cd972acb0b60f72544" kindref="member">msg_queue_map_t</ref>;</highlight></codeline>
<codeline lineno="224" refid="structgr__block_1a300d512afcd8b7896039f08837ccd6cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;pmt::pmt_t,<sp/>msg_queue_t,<sp/>pmt::pmt_comperator&gt;::iterator<sp/><ref refid="structgr__block_1a300d512afcd8b7896039f08837ccd6cf" kindref="member">msg_queue_map_itr</ref>;</highlight></codeline>
<codeline lineno="225" refid="structgr__block_1a70119713f26f538919661eb0aa6913f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgr__block_1a31ed3fbbf66627cd972acb0b60f72544" kindref="member">msg_queue_map_t</ref><sp/><ref refid="structgr__block_1a70119713f26f538919661eb0aa6913f1" kindref="member">msg_queue</ref>;</highlight></codeline>
<codeline lineno="226" refid="structgr__block_1a5543709f50bc3948d1132a3dcff77d6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pmt::pmt_t<sp/><ref refid="structgr__block_1a5543709f50bc3948d1132a3dcff77d6a" kindref="member">message_subscribers</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="structgr__block_1a2755b82373b4e009b365aff06f1cd077" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::function&lt;void(pmt::pmt_t)&gt;<sp/><ref refid="structgr__block_1a2755b82373b4e009b365aff06f1cd077" kindref="member">msg_handler_t</ref>;</highlight></codeline>
<codeline lineno="229" refid="structgr__block_1a97a217457186babc5f2d8ffaacd63621" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;pmt::pmt_t<sp/>,<sp/>msg_handler_t,<sp/>pmt::pmt_comperator&gt;<sp/><ref refid="structgr__block_1a97a217457186babc5f2d8ffaacd63621" kindref="member">d_msg_handlers_t</ref>;</highlight></codeline>
<codeline lineno="230" refid="structgr__block_1a102b671ad639405dcec8ae07df80d9e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgr__block_1a97a217457186babc5f2d8ffaacd63621" kindref="member">d_msg_handlers_t</ref><sp/><ref refid="structgr__block_1a102b671ad639405dcec8ae07df80d9e1" kindref="member">d_msg_handlers</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="structgr__block_1aa1a287ef83e6e1c34b5ade5350560de2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1aa1a287ef83e6e1c34b5ade5350560de2" kindref="member">set_msg_handler</ref>(pmt::pmt_t<sp/>which_port,<sp/>T<sp/>msg_handler){}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="structgr__block_1a2aa006147556462b1aa0f993a9c33266" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a2aa006147556462b1aa0f993a9c33266" kindref="member">message_port_register_in</ref>(pmt::pmt_t<sp/></highlight><highlight class="comment">/*port_id*/</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="235" refid="structgr__block_1a4e3ad910265b6b08ea1b8fbeb1616aba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a4e3ad910265b6b08ea1b8fbeb1616aba" kindref="member">message_port_register_out</ref>(pmt::pmt_t<sp/></highlight><highlight class="comment">/*port_id*/</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="236" refid="structgr__block_1a798896705e664b90c16992e7ad6a5c18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a798896705e664b90c16992e7ad6a5c18" kindref="member">message_port_pub</ref>(pmt::pmt_t<sp/></highlight><highlight class="comment">/*port_id*/</highlight><highlight class="normal">,<sp/>pmt::pmt_t<sp/></highlight><highlight class="comment">/*msg*/</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="237" refid="structgr__block_1aa5d60dee232ae205d87741e714299e88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1aa5d60dee232ae205d87741e714299e88" kindref="member">message_port_sub</ref>(pmt::pmt_t<sp/></highlight><highlight class="comment">/*port_id*/</highlight><highlight class="normal">,<sp/>pmt::pmt_t<sp/></highlight><highlight class="comment">/*target*/</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="238" refid="structgr__block_1a948550894f2f020c5f102ee2a6eb737d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a948550894f2f020c5f102ee2a6eb737d" kindref="member">message_port_unsub</ref>(pmt::pmt_t<sp/></highlight><highlight class="comment">/*port_id*/</highlight><highlight class="normal">,<sp/>pmt::pmt_t<sp/></highlight><highlight class="comment">/*target*/</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="structgr__block_1afe36da9de05c8ea55ab4038485d6c45f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1afe36da9de05c8ea55ab4038485d6c45f" kindref="member">message_port_is_hier</ref>(pmt::pmt_t<sp/>port_id)<sp/>{<sp/>(void)<sp/>port_id;<sp/></highlight><highlight class="comment">/*std::cout<sp/>&lt;&lt;<sp/>&quot;is_hier\n&quot;;*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="241" refid="structgr__block_1acddfef68b3880922bb6235765e08d0c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1acddfef68b3880922bb6235765e08d0c8" kindref="member">message_port_is_hier_in</ref>(pmt::pmt_t<sp/>port_id)<sp/>{<sp/>(void)<sp/>port_id;<sp/></highlight><highlight class="comment">/*std::cout<sp/>&lt;&lt;<sp/>&quot;is_hier_in\n&quot;;*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="242" refid="structgr__block_1a74dee2bc8c015773ef21a2e876bb1728" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a74dee2bc8c015773ef21a2e876bb1728" kindref="member">message_port_is_hier_out</ref>(pmt::pmt_t<sp/>port_id)<sp/>{<sp/>(void)<sp/>port_id;<sp/></highlight><highlight class="comment">/*std::cout<sp/>&lt;&lt;<sp/>&quot;is_hier_out\n&quot;;*/</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="structgr__block_1a1888baadf55d09b738011b7e2e8e2823" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pmt::pmt_t<sp/><ref refid="structgr__block_1a1888baadf55d09b738011b7e2e8e2823" kindref="member" tooltip="Get input message port names.">message_ports_in</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmt::PMT_NIL;}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="structgr__block_1af440b4aaf081f76c3b99d8855013dc79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pmt::pmt_t<sp/><ref refid="structgr__block_1af440b4aaf081f76c3b99d8855013dc79" kindref="member" tooltip="Get output message port names.">message_ports_out</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmt::PMT_NIL;}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="structgr__block_1a1a9d99191b830c53b9fe05db92b6bf0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a1a9d99191b830c53b9fe05db92b6bf0b" kindref="member" tooltip="is the queue empty?">empty_p</ref>(pmt::pmt_t<sp/>which_port)<sp/>{<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msg_queue.find(which_port)<sp/>==<sp/>msg_queue.end())</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;port<sp/>does<sp/>not<sp/>exist!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg_queue[which_port].empty();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266" refid="structgr__block_1aa0e38ded260cd3be8076bef28086c34f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1aa0e38ded260cd3be8076bef28086c34f" kindref="member">empty_p</ref>()<sp/>{<sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rv<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BOOST_FOREACH(msg_queue_map_t::value_type<sp/>&amp;i,<sp/>msg_queue){<sp/>rv<sp/>&amp;=<sp/>msg_queue[i.first].empty();<sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rv;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//|<sp/>Acquires<sp/>and<sp/>release<sp/>the<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="structgr__block_1a8e1c49c7050d4156ef0119ee767bc7ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a8e1c49c7050d4156ef0119ee767bc7ac" kindref="member">insert_tail</ref>(<sp/>pmt::pmt_t<sp/></highlight><highlight class="comment">/*which_port*/</highlight><highlight class="normal">,<sp/>pmt::pmt_t<sp/></highlight><highlight class="comment">/*msg*/</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="277" refid="structgr__block_1a488390e6da77ced5a5d6d340886d6cc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pmt::pmt_t<sp/><ref refid="structgr__block_1a488390e6da77ced5a5d6d340886d6cc1" kindref="member">delete_head_nowait</ref>(<sp/>pmt::pmt_t<sp/></highlight><highlight class="comment">/*which_port*/</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmt::PMT_NIL;}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="structgr__block_1a26a99493c97eadfd842aac72aa515aae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pmt::pmt_t<sp/><ref refid="structgr__block_1a26a99493c97eadfd842aac72aa515aae" kindref="member">delete_head_blocking</ref>(<sp/>pmt::pmt_t<sp/></highlight><highlight class="comment">/*which_port*/</highlight><highlight class="normal">){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pmt::PMT_NIL;}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="structgr__block_1ad360ea0cd0e5ac767c59281b07d57e3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_queue_t::iterator<sp/><ref refid="structgr__block_1ad360ea0cd0e5ac767c59281b07d57e3c" kindref="member">get_iterator</ref>(pmt::pmt_t<sp/>which_port){</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg_queue[which_port].begin();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="structgr__block_1afb27cadec03e47257d943e337fb6e47b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1afb27cadec03e47257d943e337fb6e47b" kindref="member">erase_msg</ref>(pmt::pmt_t<sp/>which_port,<sp/>msg_queue_t::iterator<sp/>it){</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_queue[which_port].erase(it);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="structgr__block_1ac290fa00c65a3907f82254a440be7849" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1ac290fa00c65a3907f82254a440be7849" kindref="member">has_msg_port</ref>(pmt::pmt_t<sp/>which_port){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(msg_queue.find(which_port)<sp/>!=<sp/>msg_queue.end()){</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pmt::pmt_dict_has_key(message_subscribers,<sp/>which_port)){</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="structgr__block_1a22b9bf0b8cf9af6f0fb712198b1909ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a22b9bf0b8cf9af6f0fb712198b1909ee" kindref="member" tooltip="Tests if there is a handler attached to port which_port.">has_msg_handler</ref>(pmt::pmt_t<sp/>which_port)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_msg_handlers.find(which_port)<sp/>!=<sp/>d_msg_handlers.end());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>by<sp/>the<sp/>runtime<sp/>system<sp/>to<sp/>dispatch<sp/>messages.</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>thread-safety<sp/>guarantees<sp/>mentioned<sp/>in<sp/>set_msg_handler<sp/>are<sp/>implemented</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/>*<sp/>by<sp/>the<sp/>callers<sp/>of<sp/>this<sp/>method.</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="structgr__block_1a463e4dc9205b21f94d37cf9f9eb73ad7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_msg(pmt::pmt_t<sp/>which_port,<sp/>pmt::pmt_t<sp/>msg)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AA<sp/>Update<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(has_msg_handler(which_port))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>there<sp/>a<sp/>handler?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_msg_handlers[which_port](msg);<sp/></highlight><highlight class="comment">//<sp/>Yes,<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="structgr__block_1ace960ec997da0fff8fc44168983b1a55" refkind="member"><highlight class="normal"><sp/><sp/>gruel::mutex<sp/><ref refid="structgr__block_1ace960ec997da0fff8fc44168983b1a55" kindref="member">d_setlock</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Functions<sp/>to<sp/>handle<sp/>thread<sp/>affinity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="structgr__block_1abbc4eee83a4503388c5db8ab14b10d2a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structgr__block_1abbc4eee83a4503388c5db8ab14b10d2a" kindref="member">d_affinity</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>thread<sp/>affinity<sp/>proc.<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="structgr__block_1a3de8d28d8c6b1e7ef0a2b56c4ef7f078" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a3de8d28d8c6b1e7ef0a2b56c4ef7f078" kindref="member" tooltip="Set the thread&amp;#39;s affinity to processor core n.">set_processor_affinity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;mask){d_affinity=mask;}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="structgr__block_1ad970b908c19d27123e6bafcd614296c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1ad970b908c19d27123e6bafcd614296c6" kindref="member" tooltip="Remove processor affinity to a specific core.">unset_processor_affinity</ref>(){}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="structgr__block_1a3aa2883db9211f3163911c10868f3ae0" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/><ref refid="structgr__block_1a3aa2883db9211f3163911c10868f3ae0" kindref="member" tooltip="Get the current processor affinity.">processor_affinity</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_affinity;<sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="structgr__block_1a2b5030c2a5ffa59a575c5ca02c0b4290" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>gr_vector_int<sp/><ref refid="structgr__block_1a2b5030c2a5ffa59a575c5ca02c0b4290" kindref="member">_work_ninput_items</ref>;</highlight></codeline>
<codeline lineno="354" refid="structgr__block_1a3c17dfae241d25218d11a28910b41566" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>gr_vector_int<sp/><ref refid="structgr__block_1a3c17dfae241d25218d11a28910b41566" kindref="member">_fcast_ninput_items</ref>;</highlight></codeline>
<codeline lineno="355" refid="structgr__block_1ab223ada7c7826ad9348bfbf33813ebfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1ab223ada7c7826ad9348bfbf33813ebfd" kindref="member">_num_outputs</ref>;</highlight></codeline>
<codeline lineno="356" refid="structgr__block_1a6f4bf1ad76c6c1784bc03388218cded8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ptrdiff_t<sp/><ref refid="structgr__block_1a6f4bf1ad76c6c1784bc03388218cded8" kindref="member">_work_io_ptr_mask</ref>;</highlight></codeline>
<codeline lineno="357" refid="structgr__block_1ad7a1989400137f5e369bc66eeac85df1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1ad7a1989400137f5e369bc66eeac85df1" kindref="member">_output_multiple_items</ref>;</highlight></codeline>
<codeline lineno="358" refid="structgr__block_1a124d174e6cfec49e485d42823e853fd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a124d174e6cfec49e485d42823e853fd4" kindref="member">_relative_rate</ref>;</highlight></codeline>
<codeline lineno="359" refid="structgr__block_1a3609e62366924659273dc5b22cdb035e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a3609e62366924659273dc5b22cdb035e" kindref="member">_enable_fixed_rate</ref>;</highlight></codeline>
<codeline lineno="360" refid="structgr__block_1ae7f3d8d4f495b3f782f76b2eba77c5e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1ae7f3d8d4f495b3f782f76b2eba77c5e1" kindref="member">_input_history_items</ref>;</highlight></codeline>
<codeline lineno="361" refid="structgr__block_1aedaa3c96a3840b3d1631b82a34805aed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgr__block_1a32561c88f124ea07881879fe79840f61" kindref="member">tag_propagation_policy_t</ref><sp/><ref refid="structgr__block_1aedaa3c96a3840b3d1631b82a34805aed" kindref="member">_tag_prop_policy</ref>;</highlight></codeline>
<codeline lineno="362" refid="structgr__block_1a84307a4cc2d4247ba1d2b3aa97360f76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a84307a4cc2d4247ba1d2b3aa97360f76" kindref="member">_interp</ref>,<sp/>_decim;</highlight></codeline>
<codeline lineno="363" refid="structgr__block_1a47568447c8ce065da54481e5735b6a9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>_in_sig,<sp/><ref refid="structgr__block_1a47568447c8ce065da54481e5735b6a9d" kindref="member">_out_sig</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>work(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputItems<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OutputItems<sp/>&amp;);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notify_topology(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notify_active(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>notify_inactive(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>propagate_tags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gras::TagIter<sp/>&amp;);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_update_input_reserve(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>gras::BufferQueueSptr<sp/>input_buffer_allocator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gras::SBufferConfig<sp/>&amp;);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>gras::BufferQueueSptr<sp/>output_buffer_allocator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gras::SBufferConfig<sp/>&amp;);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal">};</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="gr__block_8h_1a0e2b009a3179d6dc1131742e185f910b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;gr_block&gt;<sp/><ref refid="gr__block_8h_1a0e2b009a3179d6dc1131742e185f910b" kindref="member">gr_block_sptr</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="structgr__block_1a04144691b111d0a5eb11b4c8e780b8ff" refkind="member"><highlight class="normal">GRAS_FORCE_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a04144691b111d0a5eb11b4c8e780b8ff" kindref="member" tooltip="Call during work to consume items.">gr_block::consume_each</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how_many_items)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>GRAS_UNLIKELY(how_many_items<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgr__block_1ac0014c630a4c2420f10f29c49781fcef" kindref="member">gras::Block::consume</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(how_many_items));</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="structgr__block_1ac0014c630a4c2420f10f29c49781fcef" refkind="member"><highlight class="normal">GRAS_FORCE_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1ac0014c630a4c2420f10f29c49781fcef" kindref="member">gr_block::consume</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how_many_items)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>GRAS_UNLIKELY(how_many_items<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgr__block_1ac0014c630a4c2420f10f29c49781fcef" kindref="member">gras::Block::consume</ref>(i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(how_many_items));</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="structgr__block_1a621b10e62f099a327e400a91be5bb8a4" refkind="member"><highlight class="normal">GRAS_FORCE_INLINE<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a621b10e62f099a327e400a91be5bb8a4" kindref="member">gr_block::produce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>o,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>how_many_items)</highlight></codeline>
<codeline lineno="404"><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>GRAS_UNLIKELY(how_many_items<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgr__block_1a621b10e62f099a327e400a91be5bb8a4" kindref="member">gras::Block::produce</ref>(o,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(how_many_items));</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="structgr__block_1a47ab6e16b5901f70fe5a8794733a88b9" refkind="member"><highlight class="normal">GRAS_FORCE_INLINE<sp/>uint64_t<sp/><ref refid="structgr__block_1a47ab6e16b5901f70fe5a8794733a88b9" kindref="member" tooltip="Get absolute count of all items consumed on the given input port.">gr_block::nitems_read</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>which_input)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Block::get_consumed(which_input);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="structgr__block_1aa66fc9210a1c5ad4f0dcbc0270b52928" refkind="member"><highlight class="normal">GRAS_FORCE_INLINE<sp/>uint64_t<sp/><ref refid="structgr__block_1aa66fc9210a1c5ad4f0dcbc0270b52928" kindref="member" tooltip="Get absolute count of all items produced on the given output port.">gr_block::nitems_written</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>which_output)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Block::get_produced(which_output);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="structgr__block_1ae11942c855a552e8bccad91207e3fcfb" refkind="member"><highlight class="normal">GRAS_FORCE_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1ae11942c855a552e8bccad91207e3fcfb" kindref="member">gr_block::interpolation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="420"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a84307a4cc2d4247ba1d2b3aa97360f76" kindref="member">_interp</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="structgr__block_1a5fa21c3fcec9c362cb747615067130fd" refkind="member"><highlight class="normal">GRAS_FORCE_INLINE<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a5fa21c3fcec9c362cb747615067130fd" kindref="member">gr_block::decimation</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="425"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1a9f318fb06e990043bae12c7d53123c6f" kindref="member">_decim</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="structgr__block_1af774a12f9bcbc96726bdebdb40c1c1f5" refkind="member"><highlight class="normal">GRAS_FORCE_INLINE<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgr__block_1af774a12f9bcbc96726bdebdb40c1c1f5" kindref="member">gr_block::is_unaligned</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//probably<sp/>dont<sp/>need<sp/>this<sp/>since<sp/>volk<sp/>dispatcher<sp/>checks<sp/>alignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//32<sp/>byte<sp/>aligned<sp/>is<sp/>good<sp/>enough<sp/>for<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structgr__block_1a6f4bf1ad76c6c1784bc03388218cded8" kindref="member">_work_io_ptr_mask</ref><sp/>&amp;<sp/>ptrdiff_t(GRAS_MAX_ALIGNMENT-1))<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*INCLUDED_GNURADIO_GR_BLOCK_H*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/aviral/GNU-Niyantran/gr36/gnuradio-core/src/lib/runtime/gr_block.h"/>
  </compounddef>
</doxygen>
